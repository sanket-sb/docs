{
  "openapi": "3.0.0",
  "info": {
    "title": "SureBright API",
    "description": "API documentation for SureBright services",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://{HOST_NAME}"
    }
  ],
  "paths": {
    "/quote/api/v1/store/listCategories?storeId={storeId}&country={country}": {
      "get": {
        "summary": "List Categories",
        "description": "Retrieves a list of store categories based on storeId . The response includes category details, and labels based on the authorization status",
        "operationId": "listCategories",
        "tags": [
          "storeCategory"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ecca4210-09a4-446c-ad87-5e65bd50df12"
            },
            "description": "A unique identifier for a store will be shared as part of the integration kit.It is a path variable"
          },
          {
            "name": "country",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]{2}$",
              "example": "US"
            },
            "description": "The country code of the identified customer location"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "AL"
            },
            "description": "The state code of the identified customer location"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "storeId": {
                      "type": "string",
                      "example": "ecca4210-09a4-446c-ad87-5e65bd50df12",
                      "description": "A unique identifier for a store"
                    },
                    "isError": {
                      "type": "boolean",
                      "example": false,
                      "description": "Indicates if an error occurred"
                    },
                    "categoryList": {
                      "type": "array",
                      "description": "A list containing details of SureBright categories",
                      "items": {
                        "type": "object",
                        "properties": {
                          "sbCategoryName": {
                            "type": "string",
                            "example": "Small Home Appliance",
                            "description": "Name of the SureBright category"
                          },
                          "sbCategoryId": {
                            "type": "string",
                            "example": "4c3103e4-38dc-4171-96e5-b4b77ab0e96f",
                            "description": "Unique identifier for the category"
                          },
                          "labelList": {
                            "type": "array",
                            "description": "List of category labels",
                            "items": {
                              "type": "string",
                              "example": "HOME_APPLIANCES"
                            },
                            "example": [
                              "Ovens",
                              "Microwaves",
                              "Refrigerators"
                            ]
                          }
                        },
                        "example": {
                          "sbCategoryName": "Small Home Appliance",
                          "sbCategoryId": "4c3103e4-38dc-4171-96e5-b4b77ab0e96f",
                          "labelList": [
                            "Ovens",
                            "Microwaves",
                            "Refrigerators"
                          ]
                        }
                      }
                    }
                  },
                  "example": {
                    "storeId": "ecca4210-09a4-446c-ad87-5e65bd50df12",
                    "isError": false,
                    "categoryList": [
                      {
                        "sbCategoryName": "Small Home Appliance",
                        "sbCategoryId": "4c3103e4-38dc-4171-96e5-b4b77ab0e96f",
                        "labelList": [
                          "Ovens",
                          "Microwaves",
                          "Refrigerators"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "511": {
            "description": "Insufficient Parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 511
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Insufficient Parameters"
                    }
                  }
                }
              }
            }
          },
          "512": {
            "description": "Validation Failed for Input Parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 512
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Validation Failed for Input Parameters"
                    }
                  }
                }
              }
            }
          },
          "513": {
            "description": "Product Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 513
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Product Not Found"
                    }
                  }
                }
              }
            }
          },
          "514": {
            "description": "No Quote Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 514
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "No Quote Found"
                    }
                  }
                }
              }
            }
          },
          "515": {
            "description": "Store Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 515
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Store Not Found"
                    }
                  }
                }
              }
            }
          },
          "516": {
            "description": "Not Eligible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 516
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Not Eligible"
                    }
                  }
                }
              }
            }
          },
          "517": {
            "description": "Category Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 517
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Category Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Something Unexpectedly Went Wrong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 500
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Something Unexpectedly Went Wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quote/listWarrantyQuotes?storeId={storeId}&country={country}&productUrl={PRODUCT_URL}&price={price}": {
      "get": {
        "summary": "List Warranty Quotes by Product",
        "description": "This endpoint retrieves a list of warranty quotes for a specific product and its price.",
        "operationId": "listWarrantyQuotesByProduct",
        "tags": [
          "quotes"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ecca4210-09a4-446c-ad87-5e65bd50df12"
            },
            "description": "A unique identifier for a store will be shared as part of the integration kit. this will be added as path variable"
          },
          {
            "name": "country",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]{2}$",
              "example": "US"
            },
            "description": "The country code of the identified customer location"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "AL"
            },
            "description": "The state code of the identified customer location"
          },
          {
            "name": "productUrl",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4c3103e4-38dc-4171-96e5-b4b77ab0e96f"
            },
            "description": "The URL containing the product page that is shown to the customer"
          },
          {
            "name": "price",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float",
              "example": 230.54
            },
            "description": "The price of the product in the currency of the country specified in the above parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Quotes Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "warrantyQuoteId",
                    "warrantyQuoteItemList",
                    "coverageWidgetHeading",
                    "coveragePopupHeading",
                    "coverageList"
                  ],
                  "properties": {
                    "warrantyQuoteId": {
                      "type": "string",
                      "description": "A unique ID representing this specific return quote in this particular API call",
                      "example": "929d14dd-2937-4290-9818-8fca2a00a9a3"
                    },
                    "warrantyQuoteItemList": {
                      "type": "array",
                      "description": "A list of warranty offers generated for this particular request",
                      "items": {
                        "type": "object",
                        "properties": {
                          "warrantyTenure": {
                            "type": "integer",
                            "description": "Duration of the warranty in years",
                            "example": 2
                          },
                          "warrantyPrice": {
                            "type": "number",
                            "format": "float",
                            "description": "Price of the warranty",
                            "example": 64.99
                          },
                          "warrantyQuoteItemId": {
                            "type": "string",
                            "description": "Unique identifier for the warranty quote item",
                            "example": "8c78bc1a-0790-4cd3-a3f9-5ed97bbe59f5"
                          }
                        }
                      }
                    },
                    "tncLink": {
                      "type": "string",
                      "description": "Unique link for legal Terms & Conditions of the warranty for each product Category",
                      "example": "https://customer.surebright.com/t-c/098e0e696f20839479dfe4a2804756233d32130f068441e24c6c0dbbc790677ff9718e04396a18dac753d0cf92bcaf63a26d2b666e5326475d0b2ed7475ad7fc"
                    },
                    "productImageUrl":{
                      "type": "string",
                      "description": "Link of the product image that can be show as part of the warranty offer UI",
                      "example": "<https://cdn.shopify.com/s/files/1/0254/6227/6182/products/bedbathandimage.jpg?v=1664467971>"
                    },
                    "coverageWidgetHeading": {
                      "type": "string",
                      "description": "Heading for the various tenure options shown to a customer on the product page",
                      "example": "Add premium product protection"
                    },
                    "coveragePopupHeading": {
                      "type": "string",
                      "description": "Title that nudges the customers to buy a warranty for their product purchase",
                      "example": "Don't want to spend extra on this product for the next few years? We've got you covered!"
                    },
                    "coverageList": {
                      "type": "array",
                      "description": "List of coverage options grouped under different sections",
                      "items": {
                        "type": "object",
                        "properties": {
                          "coverageItemType": {
                            "type": "string",
                            "enum": [
                              "COVERAGE_OPTION",
                              "WHY_SUREBRIGHT"
                            ],
                            "example": "COVERAGE_OPTION"
                          },
                          "coverageItemTitle": {
                            "type": "string",
                            "example": "Your warranty plan provides,"
                          },
                          "coverageItemList": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Protection against everyday spills (food, beverages, human or pet biological stains, cosmetics, etc)."
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "511": {
            "description": "Insufficient Parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 511
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Insufficient Parameters"
                    }
                  }
                }
              }
            }
          },
          "512": {
            "description": "Validation Failed for Input Parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 512
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Validation Failed for Input Parameters"
                    }
                  }
                }
              }
            }
          },
          "513": {
            "description": "Product Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 513
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Product Not Found"
                    }
                  }
                }
              }
            }
          },
          "514": {
            "description": "No Quote Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 514
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "No Quote Found"
                    }
                  }
                }
              }
            }
          },
          "515": {
            "description": "Store Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 515
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Store Not Found"
                    }
                  }
                }
              }
            }
          },
          "516": {
            "description": "Not Eligible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 516
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Not Eligible"
                    }
                  }
                }
              }
            }
          },
          "517": {
            "description": "Category Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 517
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Category Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Something Unexpectedly Went Wrong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 500
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Something Unexpectedly Went Wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    ,
    "/api/v1/quote/listCategoryWarrantyQuotes?storeId={storeId}&country={country}&productUrl={PRODUCT_URL}": {
      "get": {
        "summary": "List Quotes by URL",
        "description": "This endpoint fetches all warranty quotes for the product category to which product in the sent URL belongs.",
        "operationId": "listWarrantyQuotesByUrl",
        "tags": [
          "quotes"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ecca4210-09a4-446c-ad87-5e65bd50df12"
            },
            "description": "A unique identifier for a store will be shared as part of the integration kit."
          },
          {
            "name": "country",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]{2}$",
              "example": "US"
            },
            "description": "The country code of the identified customer location"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "AL"
            },
            "description": "The state code of the identified customer location"
          },
          {
            "name": "productUrl",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4c3103e4-38dc-4171-96e5-b4b77ab0e96f"
            },
            "description": "The URL containing the product page that is shown to the customer"
          }
        ],
        "responses": {
          "200": {
            "description": "Quotes Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "warrantyQuoteId",
                    "warrantyQuoteItemList",
                    "coverageWidgetHeading",
                    "coveragePopupHeading",
                    "coverageList"
                  ],
                  "properties": {
                    "lowerPrice": {
                      "type": "number",
                      "format": "float",
                      "example": 0
                    },
                    "upperPrice": {
                      "type": "number",
                      "format": "float",
                      "example": 499.99
                    },
                    
                    "warrantyQuoteId": {
                      "type": "string",
                      "description": "A unique ID representing this specific return quote in this particular API call",
                      "example": "929d14dd-2937-4290-9818-8fca2a00a9a3"
                    },
                    "warrantyQuoteItemList": {
                      "type": "array",
                      "description": "A list of warranty offers generated for this particular request",
                      "items": {
                        "type": "object",
                        "properties": {
                          "warrantyTenure": {
                            "type": "integer",
                            "description": "Duration of the warranty in years",
                            "example": 2
                          },
                          "warrantyPrice": {
                            "type": "number",
                            "format": "float",
                            "description": "Price of the warranty",
                            "example": 64.99
                          },
                          "warrantyQuoteItemId": {
                            "type": "string",
                            "description": "Unique identifier for the warranty quote item",
                            "example": "8c78bc1a-0790-4cd3-a3f9-5ed97bbe59f5"
                          }
                        }
                      }
                    },
                    "tncLink": {
                      "type": "string",
                      "description": "Unique link for legal Terms & Conditions of the warranty for each product Category",
                      "example": "https://customer.surebright.com/t-c/098e0e696f20839479dfe4a2804756233d32130f068441e24c6c0dbbc790677ff9718e04396a18dac753d0cf92bcaf63a26d2b666e5326475d0b2ed7475ad7fc"
                    },
                    "productImageUrl":{
                      "type": "string",
                      "description": "Link of the product image that can be show as part of the warranty offer UI",
                      "example": "<https://cdn.shopify.com/s/files/1/0254/6227/6182/products/bedbathandimage.jpg?v=1664467971>"
                    },
                    "coverageWidgetHeading": {
                      "type": "string",
                      "description": "Heading for the various tenure options shown to a customer on the product page",
                      "example": "Add premium product protection"
                    },
                    "coveragePopupHeading": {
                      "type": "string",
                      "description": "Title that nudges the customers to buy a warranty for their product purchase",
                      "example": "Don't want to spend extra on this product for the next few years? We've got you covered!"
                    },
                    "coverageList": {
                      "type": "array",
                      "description": "List of coverage options grouped under different sections",
                      "items": {
                        "type": "object",
                        "properties": {
                          "coverageItemType": {
                            "type": "string",
                            "enum": [
                              "COVERAGE_OPTION",
                              "WHY_SUREBRIGHT"
                            ],
                            "example": "COVERAGE_OPTION"
                          },
                          "coverageItemTitle": {
                            "type": "string",
                            "example": "Your warranty plan provides,"
                          },
                          "coverageItemList": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Protection against everyday spills (food, beverages, human or pet biological stains, cosmetics, etc)."
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "511": {
            "description": "Insufficient Parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 511
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Insufficient Parameters"
                    }
                  }
                }
              }
            }
          },
          "512": {
            "description": "Validation Failed for Input Parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 512
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Validation Failed for Input Parameters"
                    }
                  }
                }
              }
            }
          },
          "513": {
            "description": "Product Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 513
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Product Not Found"
                    }
                  }
                }
              }
            }
          },
          "514": {
            "description": "No Quote Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 514
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "No Quote Found"
                    }
                  }
                }
              }
            }
          },
          "515": {
            "description": "Store Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 515
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Store Not Found"
                    }
                  }
                }
              }
            }
          },
          "516": {
            "description": "Not Eligible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 516
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Not Eligible"
                    }
                  }
                }
              }
            }
          },
          "517": {
            "description": "Category Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 517
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Category Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Something Unexpectedly Went Wrong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 500
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Something Unexpectedly Went Wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    ,
    "/quote/api/v1/category/listWarrantyQuotes?storeId={storeId}&country={country}&sbCategoryId={sbCategoryId}&price={price}": {
      "get": {
        "summary": "List Quotes by Category",
        "description": "This endpoint retrieves a list of warranty quotes for a specific store and category. The response includes detailed warranty options, pricing, and coverage information.",
        "operationId": "listWarrantyQuotesByCategory",
        "tags": [
          "quotes"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ecca4210-09a4-446c-ad87-5e65bd50df12"
            },
            "description": "A unique identifier for a store will be shared as part of the integration kit. this will be added as path variable"
          },
          {
            "name": "country",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]{2}$",
              "example": "US"
            },
            "description": "The country code of the identified customer location"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "AL"
            },
            "description": "The state code of the identified customer location"
          },
          {
            "name": "sbCategoryId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4c3103e4-38dc-4171-96e5-b4b77ab0e96f"
            },
            "description": "The URL containing the product page that is shown to the customer"
          },
          {
            "name": "price",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float",
              "example": 230.54
            },
            "description": "The price of the product in the currency of the country specified in the above parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Quotes Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "warrantyQuoteId",
                    "warrantyQuoteItemList",
                    "coverageWidgetHeading",
                    "coveragePopupHeading",
                    "coverageList"
                  ],
                  "properties": {
                    "warrantyQuoteId": {
                      "type": "string",
                      "description": "A unique ID representing this specific return quote in this particular API call",
                      "example": "929d14dd-2937-4290-9818-8fca2a00a9a3"
                    },
                    "warrantyQuoteItemList": {
                      "type": "array",
                      "description": "A list of warranty offers generated for this particular request",
                      "items": {
                        "type": "object",
                        "properties": {
                          "warrantyTenure": {
                            "type": "integer",
                            "description": "Duration of the warranty in years",
                            "example": 2
                          },
                          "warrantyPrice": {
                            "type": "number",
                            "format": "float",
                            "description": "Price of the warranty",
                            "example": 64.99
                          },
                          "warrantyQuoteItemId": {
                            "type": "string",
                            "description": "Unique identifier for the warranty quote item",
                            "example": "8c78bc1a-0790-4cd3-a3f9-5ed97bbe59f5"
                          }
                        }
                      }
                    },
                    "tncLink": {
                      "type": "string",
                      "description": "Unique link for legal Terms & Conditions of the warranty for each product Category",
                      "example": "https://customer.surebright.com/t-c/098e0e696f20839479dfe4a2804756233d32130f068441e24c6c0dbbc790677ff9718e04396a18dac753d0cf92bcaf63a26d2b666e5326475d0b2ed7475ad7fc"
                    },
                    "coverageWidgetHeading": {
                      "type": "string",
                      "description": "Heading for the various tenure options shown to a customer on the product page",
                      "example": "Add premium product protection"
                    },
                    "coveragePopupHeading": {
                      "type": "string",
                      "description": "Title that nudges the customers to buy a warranty for their product purchase",
                      "example": "Don't want to spend extra on this product for the next few years? We've got you covered!"
                    },
                    "coverageList": {
                      "type": "array",
                      "description": "List of coverage options grouped under different sections",
                      "items": {
                        "type": "object",
                        "properties": {
                          "coverageItemType": {
                            "type": "string",
                            "enum": [
                              "COVERAGE_OPTION",
                              "WHY_SUREBRIGHT"
                            ],
                            "example": "COVERAGE_OPTION"
                          },
                          "coverageItemTitle": {
                            "type": "string",
                            "example": "Your warranty plan provides,"
                          },
                          "coverageItemList": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Protection against everyday spills (food, beverages, human or pet biological stains, cosmetics, etc)."
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "511": {
            "description": "Insufficient Parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 511
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Insufficient Parameters"
                    }
                  }
                }
              }
            }
          },
          "512": {
            "description": "Validation Failed for Input Parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 512
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Validation Failed for Input Parameters"
                    }
                  }
                }
              }
            }
          },
          "513": {
            "description": "Product Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 513
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Product Not Found"
                    }
                  }
                }
              }
            }
          },
          "514": {
            "description": "No Quote Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 514
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "No Quote Found"
                    }
                  }
                }
              }
            }
          },
          "515": {
            "description": "Store Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 515
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Store Not Found"
                    }
                  }
                }
              }
            }
          },
          "516": {
            "description": "Not Eligible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 516
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Not Eligible"
                    }
                  }
                }
              }
            }
          },
          "517": {
            "description": "Category Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 517
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Category Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Something Unexpectedly Went Wrong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                      "type": "boolean",
                      "description": "true"
                    },
                    "errorType": {
                      "type": "integer",
                      "description": "error type",
                      "example": 500
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Something Unexpectedly Went Wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    ,
    "/partner/api/v1/order": {
      "post": {
        "summary": "Create/Update Warranty",
        "description": "This endpoint is used to create warranty contracts for a specific order.\n\n🛠️ **Contract Creation Logic**\nWarranty contracts are created in a 1:1 ratio with the quantity of the associated product purchased.\nThe warranty quantity is automatically inferred from the product quantity.\nContracts are only created for the exact number of products purchased—warranty coverage cannot exceed or fall short of the product quantity.\n\n🏷️ **Using policySKU**\nThe `policySKU` is a required field that determines the parameters of each warranty contract, including:\n- Coverage Type (e.g., accidental damage, mechanical breakdown)\n- Tenure (duration of coverage)\n- Country (to apply relevant terms and conditions)\n- Category (product type classification)\nMerchants must ensure that the appropriate `policySKU` is used for each product to ensure accurate coverage assignment.\n\n🔁 **Handling Updates**\nIf this endpoint is called for an order where contracts already exist:\n- Existing contracts will be updated if the quantity or details have changed.\n- Warranty price, tenure, and coverage type are handled automatically based on the provided `policySKU`.",
        "operationId": "createUpdateWarranty",
        "tags": [
          "orders"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "storeId",
                  "orderId",
                  "orderPurchaseDate",
                  "orderLineItemList",
                  "customerDetails"
                ],
                "properties": {
                  "storeId": {
                    "type": "string",
                    "description": "A unique identifier for a store will be shared as part of the integration kit",
                    "example": "f4c059b2-5b74-4e4c-a3c5-85bc80cf8a09"
                  },
                  "orderId": {
                    "type": "string",
                    "description": "Unique identifier for the complete successful order placed by a customer on the merchant site. This represents the whole order that can have multiple line items of different quantities.",
                    "maxLength": 48,
                    "example": "83737121380"
                  },
                  "orderPurchaseDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date time at which the order was purchased by customer.",
                    "example": "2024-01-07T10:15:30Z"
                  },
                  "orderLineItemList": {
                    "type": "array",
                    "description": "The lineItemList consists of individual line items representing purchased products and/or products with policies. Each line item is uniquely identified by a lineItemId (String: maximum length 48 characters). The planDetails serve to identify the specific quote option acquired by the customer. OptionId is the combination of product attributes separated by #.",
                    "items": {
                      "type": "object",
                      "required": [
                        "lineItemId",
                        "totalPrice",
                        "salePrice",
                        "quantity",
                        "productTitle",
                        "productId",
                        "productSKU",
                        "totalOrderValue",
                        "isTestOrder",
                        "tax"
                      ],
                      "properties": {
                        "lineItemId": {
                          "type": "string",
                          "maxLength": 48,
                          "example": "374dc3c3-94a3-4b85-a876-8651e461446d"
                        },
                        "planDetails": {
                          "type": "object",
                          "required": [
                            "policyPurchaseDate",
                            "policySKU",
                            "policyPrice"
                          ],
                          "properties": {
                            "policyPurchaseDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Date time at which the policy was purchased by the customer.",
                              "example": "2024-01-07T10:15:30Z"
                            },
                           
                            "policySKU": {
                              "type": "string",
                              "description": "The SKU id of the policy purchased by the customer, this will only be required if warranty to be selected is based on the policy SKU ids shared with the store",
                              "example": "SBW-1U-SHAB-2900"
                            },
                            "policyPrice": {
                               "type": "number",
                               "description":"The price of policy purchased by the customer. ",
                              "example": 29
                            }
                          }
                        },
                        "totalPrice": {
                          "type": "number",
                          "example": 3300
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 3
                        },
                        "productTitle": {
                          "type": "string",
                          "example": "GreatCircleUSA 3-in-1 Wood Chipper - 7HP Engine, 3 Max Branch Capacity"
                        },
                        "productId": {
                          "type": "string",
                          "example": "6673746231399"
                        },
                        "optionId": {
                          "type": "string",
                          "example": "8577825144935"
                        },
                        "productSKU": {
                          "type": "string",
                          "example": "ALH05"
                        },
                        "salePrice": {
                          "type": "number",
                          "example": 1100
                        },
                        "listPrice": {
                          "type": "number",
                          "example": 1299
                        },
                        "discountAmount": {
                          "type": "number",
                          "example": 199
                        },
                        "productURL": {
                          "type": "string",
                          "example": "https://example.com/products/wood-chipper-alh05"
                        }
                      }
                    }
                  },
                  "customerDetails": {
                    "type": "object",
                    "required": [
                      "firstName",
                      "lastName",
                      "addressLine1",
                      "city",
                      "state",
                      "country",
                      "zipCode",
                      "customerEmail"
                    ],
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "example": "John"
                      },
                      "lastName": {
                        "type": "string",
                        "example": "Doe"
                      },
                      "addressLine1": {
                        "type": "string",
                        "example": "123 Hathway Street"
                      },
                      "addressLine2": {
                        "type": "string",
                        "example": "Apt 4B"
                      },
                      "city": {
                        "type": "string",
                        "example": "New York City"
                      },
                      "state": {
                        "type": "string",
                        "description": "ISO 3166-2 code",
                        "example": "NY"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country code for USA is US",
                        "example": "US"
                      },
                      "zipCode": {
                        "type": "string",
                        "example": "10005"
                      },
                      "customerEmail": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@gmail.com"
                      },
                      "mobileNumber": {
                        "type": "string",
                        "example": "7872323781"
                      }
                    }
                  },
                  "discount": {
                    "type": "object",
                    "properties": {
                      "discountAmount": {
                        "type": "number",
                        "example": 10
                      }
                    }
                  },
                  "totalOrderValue": {
                    "type": "number",
                    "example": 1000
                  },
                  "isTestOrder": {
                    "type": "boolean",
                    "example": false
                  },
                  "taxAmount": {
                    "type": "number",
                    "example": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Warranty created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "storeId": {
                      "type": "string",
                      "description": "A unique identifier for a store will be shared as part of the integration kit",
                      "example": "f4c059b2-5b74-4e4c-a3c5-85bc80cf8a09"
                    },
                    "orderId": {
                      "type": "string",
                      "description": "A unique identifier for the complete successful order placed by a customer on the merchant site. This represents the whole order that can have multiple line items of different quantities.",
                      "maxLength": 48,
                      "example": "83737121380"
                    },
                    "contractList": {
                      "type": "array",
                      "description": "The list of contracts generated for each quantity in each line item. If any error in generating a contract, the error code and msg will be added for that item instead of the contract id.",
                      "items": {
                        "type": "object",
                      
                        "properties": {
                          "lineItemId": {
                            "type": "string",
                            "example": "374dc3c3-94a3-4b85-a876-8651e461446d"
                          },
                          "contractId": {
                            "type": "string",
                            "example": "abc12345-6789-4abc-bcde-ef1234567890"
                          },
                         
                          "isCancelled": {
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207": {
            "description": "Partial order processing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                            "type": "boolean",
                            "example": true
                    },
                    "storeId": {
                      "type": "string",
                      "description": "A unique identifier for a store will be shared as part of the integration kit",
                      "example": "f4c059b2-5b74-4e4c-a3c5-85bc80cf8a09"
                    },
                    "orderId": {
                      "type": "string",
                      "description": "A unique identifier for the complete successful order placed by a customer on the merchant site. This represents the whole order that can have multiple line items of different quantities.",
                      "maxLength": 48,
                      "example": "83737121380"
                    },
                    "contractList": {
                      "type": "array",
                      "description": "The list of contracts generated for each quantity in each line item. If any error in generating a contract, the error code and msg will be added for that item instead of the contract id.",
                      "items": {
                        "type": "object",
                      
                        "properties": {
                          "lineItemId": {
                            "type": "string",
                            "example": "374dc3c3-94a3-4b85-a876-8651e461446d"
                          },
                          "contractId": {
                            "type": "string",
                            "example": "abc12345-6789-4abc-bcde-ef1234567890"
                          },
                         
                          "isCancelled": {
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    },
                    "errorList": {
                      "type": "array",
                      "description": "The list of contracts generated for each quantity in each line item. If any error in generating a contract, the error code and msg will be added for that item instead of the contract id.",
                      "items": {
                        "type": "object",
                      
                        "properties": {
                          "lineItemId": {
                            "type": "string",
                            "example": "374dc3c3-94a3-4b85-a876-8651e461446d"
                          },
                          "error": {
                            "type": "string",
                            "example": "planDetails.policyPurchaseDate is required"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "storeId": {
                      "type": "string",
                      "description": "A unique identifier for a store will be shared as part of the integration kit",
                      "example": "f4c059b2-5b74-4e4c-a3c5-85bc80cf8a09"
                    },
                    "orderId": {
                      "type": "string",
                      "description": "A unique identifier for the complete successful order placed by a customer on the merchant site. This represents the whole order that can have multiple line items of different quantities.",
                      "maxLength": 48,
                      "example": "83737121380"
                    },
                    "errorList": {
                      "type": "array",
                      "description": "The list of contracts generated for each quantity in each line item. If any error in generating a contract, the error code and msg will be added for that item instead of the contract id.",
                      "items": {
                        "type": "object",
                      
                        "properties": {
                          "lineItemId": {
                            "type": "string",
                            "example": "374dc3c3-94a3-4b85-a876-8651e461446d"
                          },
                          "error": {
                            "type": "string",
                            "example": "planDetails.policyPurchaseDate is required"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "storeId": {
                      "type": "string",
                      "description": "Store Id",
                      "example":"8577825144935"
                    },
                    "errorCode": {
                      "type": "integer",
                      "description": "error type",
                      "example": 500
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Failed to process order with internal service"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "storeId": {
                      "type": "string",
                      "description": "Store Id",
                      "example":"8577825144935"
                    },
                    "errorCode": {
                      "type": "integer",
                      "description": "error type",
                      "example": 401
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "X-SureBright-Access-Token header is required"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Warranty",
        "description": "This endpoint is used to create, update, or cancel warranty contracts for a specific order.\n\n🔄 **Updating Line Item Quantities**\nIf the quantity of a product in the original order is changed (e.g., reduced), the corresponding warranty contract quantity is automatically adjusted to match the updated product quantity.\n\nTo reduce or cancel warranty coverage for a line item, update the `quantity` field inside the relevant `lineItem` object in the `orderLineItemList`.\n\n❌ **Cancelling Line Items**\nTo cancel warranty coverage for a specific line item, set its `quantity` to 0 in the `orderLineItemList`.\nOnce cancelled, a warranty contract cannot be reactivated.\nThis applies to both partial cancellations (some items in the order) and full order cancellations.\n\n🧾 **Handling Full Order Cancellation**\nFor full order cancellations, merchants have two options:\n- Remove the `planDetails` object entirely from the request payload.\n- Set the `quantity` of each relevant `lineItem` in `orderLineItemList` to 0.\n\n⚙️ **Automatic Price and Tenure Updates**\nAny changes to warranty price or tenure (e.g., due to product updates or plan revisions) are handled automatically by the system.",
        "operationId": "UpdateWarranty",
        "tags": [
          "orders"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "storeId",
                  "orderId",
                  "orderPurchaseDate",
                  "orderLineItemList",
                  "customerDetails"
                ],
                "properties": {
                  "storeId": {
                    "type": "string",
                    "description": "A unique identifier for a store will be shared as part of the integration kit",
                    "example": "f4c059b2-5b74-4e4c-a3c5-85bc80cf8a09"
                  },
                  "orderId": {
                    "type": "string",
                    "description": "Unique identifier for the complete successful order placed by a customer on the merchant site. This represents the whole order that can have multiple line items of different quantities.",
                    "maxLength": 48,
                    "example": "83737121380"
                  },
                  "orderPurchaseDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date time at which the order was purchased by customer.",
                    "example": "2024-01-07T10:15:30Z"
                  },
                  "orderLineItemList": {
                    "type": "array",
                    "description": "The lineItemList consists of individual line items representing purchased products and/or products with policies. Each line item is uniquely identified by a lineItemId (String: maximum length 48 characters). The planDetails serve to identify the specific quote option acquired by the customer. OptionId is the combination of product attributes separated by #.",
                    "items": {
                      "type": "object",
                      "required": [
                        "lineItemId",
                        "totalPrice",
                        "salePrice",
                        "quantity",
                        "productTitle",
                        "productId",
                        "productSKU",
                        "totalOrderValue",
                        "isTestOrder",
                        "tax"
                      ],
                      "properties": {
                        "lineItemId": {
                          "type": "string",
                          "maxLength": 48,
                          "example": "374dc3c3-94a3-4b85-a876-8651e461446d"
                        },
                        "planDetails": {
                          "type": "object",
                          "required": [
                            "policyPurchaseDate",
                            "policySKU",
                            "policyPrice"
                          ],
                          "properties": {
                            "policyPurchaseDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Date time at which the policy was purchased by the customer.",
                              "example": "2024-01-07T10:15:30Z"
                            },
                           
                            "policySKU": {
                              "type": "string",
                              "description": "The SKU id of the policy purchased by the customer, this will only be required if warranty to be selected is based on the policy SKU ids shared with the store",
                              "example": "SBW-1U-SHAB-2900"
                            },
                            "policyPrice": {
                              "type": "number",
                              "description":"The price of policy purchased by the customer. ",
                              "example": 29
                            }
                          }
                        },
                        "totalPrice": {
                          "type": "number",
                          "example": 3300
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 3
                        },
                        "productTitle": {
                          "type": "string",
                          "example": "GreatCircleUSA 3-in-1 Wood Chipper - 7HP Engine, 3 Max Branch Capacity"
                        },
                        "productId": {
                          "type": "string",
                          "example": "6673746231399"
                        },
                        "optionId": {
                          "type": "string",
                          "example": "8577825144935"
                        },
                        "productSKU": {
                          "type": "string",
                          "example": "ALH05"
                        },
                        "salePrice": {
                          "type": "number",
                          "example": 1100
                        },
                        "listPrice": {
                          "type": "number",
                          "example": 1299
                        },
                        "discountAmount": {
                          "type": "number",
                          "example": 199
                        },
                        "productURL": {
                          "type": "string",
                          "example": "https://example.com/products/wood-chipper-alh05"
                        }
                      }
                    }
                  },
                  "customerDetails": {
                    "type": "object",
                    "required": [
                      "firstName",
                      "lastName",
                      "addressLine1",
                      "city",
                      "state",
                      "country",
                      "zipCode",
                      "customerEmail"
                    ],
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "example": "John"
                      },
                      "lastName": {
                        "type": "string",
                        "example": "Doe"
                      },
                      "addressLine1": {
                        "type": "string",
                        "example": "123 Hathway Street"
                      },
                      "addressLine2": {
                        "type": "string",
                        "example": "Apt 4B"
                      },
                      "city": {
                        "type": "string",
                        "example": "New York City"
                      },
                      "state": {
                        "type": "string",
                        "description": "ISO 3166-2 code",
                        "example": "NY"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country code for USA is US",
                        "example": "US"
                      },
                      "pinCode": {
                        "type": "string",
                        "example": "10005"
                      },
                      "customerEmail": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@gmail.com"
                      },
                      "mobileNumber": {
                        "type": "string",
                        "example": "7872323781"
                      }
                    }
                  },
                  "discount": {
                    "type": "object",
                    "properties": {
                      "discountAmount": {
                        "type": "number",
                        "example": 10
                      }
                    }
                  },
                  "totalOrderValue": {
                    "type": "number",
                    "example": 1000
                  },
                  "isTestOrder": {
                    "type": "boolean",
                    "example": false
                  },
                  "taxAmount": {
                    "type": "number",
                    "example": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Warranty created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "storeId": {
                      "type": "string",
                      "description": "A unique identifier for a store will be shared as part of the integration kit",
                      "example": "f4c059b2-5b74-4e4c-a3c5-85bc80cf8a09"
                    },
                    "orderId": {
                      "type": "string",
                      "description": "A unique identifier for the complete successful order placed by a customer on the merchant site. This represents the whole order that can have multiple line items of different quantities.",
                      "maxLength": 48,
                      "example": "83737121380"
                    },
                    "contractList": {
                      "type": "array",
                      "description": "The list of contracts generated for each quantity in each line item. If any error in generating a contract, the error code and msg will be added for that item instead of the contract id.",
                      "items": {
                        "type": "object",
                      
                        "properties": {
                          "lineItemId": {
                            "type": "string",
                            "example": "374dc3c3-94a3-4b85-a876-8651e461446d"
                          },
                          "contractId": {
                            "type": "string",
                            "example": "abc12345-6789-4abc-bcde-ef1234567890"
                          },
                         
                          "isCancelled": {
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207": {
            "description": "Partial order processing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isError": {
                            "type": "boolean",
                            "example": true
                    },
                    "storeId": {
                      "type": "string",
                      "description": "A unique identifier for a store will be shared as part of the integration kit",
                      "example": "f4c059b2-5b74-4e4c-a3c5-85bc80cf8a09"
                    },
                    "orderId": {
                      "type": "string",
                      "description": "A unique identifier for the complete successful order placed by a customer on the merchant site. This represents the whole order that can have multiple line items of different quantities.",
                      "maxLength": 48,
                      "example": "83737121380"
                    },
                    "contractList": {
                      "type": "array",
                      "description": "The list of contracts generated for each quantity in each line item. If any error in generating a contract, the error code and msg will be added for that item instead of the contract id.",
                      "items": {
                        "type": "object",
                      
                        "properties": {
                          "lineItemId": {
                            "type": "string",
                            "example": "374dc3c3-94a3-4b85-a876-8651e461446d"
                          },
                          "contractId": {
                            "type": "string",
                            "example": "abc12345-6789-4abc-bcde-ef1234567890"
                          },
                         
                          "isCancelled": {
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    },
                    "errorList": {
                      "type": "array",
                      "description": "The list of contracts generated for each quantity in each line item. If any error in generating a contract, the error code and msg will be added for that item instead of the contract id.",
                      "items": {
                        "type": "object",
                      
                        "properties": {
                          "lineItemId": {
                            "type": "string",
                            "example": "374dc3c3-94a3-4b85-a876-8651e461446d"
                          },
                          "error": {
                            "type": "string",
                            "example": "planDetails.policyPurchaseDate is required"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "storeId": {
                      "type": "string",
                      "description": "A unique identifier for a store will be shared as part of the integration kit",
                      "example": "f4c059b2-5b74-4e4c-a3c5-85bc80cf8a09"
                    },
                    "orderId": {
                      "type": "string",
                      "description": "A unique identifier for the complete successful order placed by a customer on the merchant site. This represents the whole order that can have multiple line items of different quantities.",
                      "maxLength": 48,
                      "example": "83737121380"
                    },
                    "errorList": {
                      "type": "array",
                      "description": "The list of contracts generated for each quantity in each line item. If any error in generating a contract, the error code and msg will be added for that item instead of the contract id.",
                      "items": {
                        "type": "object",
                      
                        "properties": {
                          "lineItemId": {
                            "type": "string",
                            "example": "374dc3c3-94a3-4b85-a876-8651e461446d"
                          },
                          "error": {
                            "type": "string",
                            "example": "planDetails.policyPurchaseDate is required"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "storeId": {
                      "type": "string",
                      "description": "Store Id",
                      "example":"8577825144935"
                    },
                    "errorCode": {
                      "type": "integer",
                      "description": "error type",
                      "example": 500
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "Failed to process order with internal service"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "storeId": {
                      "type": "string",
                      "description": "Store Id",
                      "example":"8577825144935"
                    },
                    "errorCode": {
                      "type": "integer",
                      "description": "error type",
                      "example": 401
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "error message",
                      "example": "X-SureBright-Access-Token header is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}